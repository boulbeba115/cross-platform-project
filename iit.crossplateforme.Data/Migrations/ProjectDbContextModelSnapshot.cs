// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iit.crossplateforme.Data;

namespace iit.crossplateforme.Data.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("iit.crossplateforme.Domain.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.Ingredient", b =>
                {
                    b.Property<long>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MealId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ingrediant")
                        .HasColumnType("TEXT");

                    b.HasKey("IngredientId");

                    b.HasIndex("MealId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.Meal", b =>
                {
                    b.Property<long>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MealCategoryCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MealDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("MealImg")
                        .HasColumnType("TEXT");

                    b.Property<string>("MealName")
                        .HasColumnType("TEXT");

                    b.Property<double>("MealPrice")
                        .HasColumnType("REAL");

                    b.Property<long?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isGlutenFree")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isLactoseFree")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isVegan")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isVegetarian")
                        .HasColumnType("INTEGER");

                    b.HasKey("MealId");

                    b.HasIndex("MealCategoryCategoryId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.Ingredient", b =>
                {
                    b.HasOne("iit.crossplateforme.Domain.Meal", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("MealId");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.Meal", b =>
                {
                    b.HasOne("iit.crossplateforme.Domain.Category", "MealCategory")
                        .WithMany()
                        .HasForeignKey("MealCategoryCategoryId");

                    b.HasOne("iit.crossplateforme.Domain.Order", null)
                        .WithMany("Meals")
                        .HasForeignKey("OrderId");

                    b.HasOne("iit.crossplateforme.Domain.User", null)
                        .WithMany("FavoriteMeals")
                        .HasForeignKey("UserId");

                    b.Navigation("MealCategory");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.Order", b =>
                {
                    b.HasOne("iit.crossplateforme.Domain.User", null)
                        .WithMany("Commandes")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.Meal", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.Order", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("iit.crossplateforme.Domain.User", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("FavoriteMeals");
                });
#pragma warning restore 612, 618
        }
    }
}
